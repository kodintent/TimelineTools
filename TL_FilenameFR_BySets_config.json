{
    "TIMELINE FOLDER 1": [
		],
    "TIMELINE FOLDER 2": [
    ], 
    "TIMELINE FOLDER 3": [
    ],
    "HELP": [
        {"case_sens": true, "regex": false, "find": "--", "replace": "-"},
        {"case_sens": true, "regex": false, "find": "- -", "replace": "-"},
        {"case_sens": true, "regex": false, "find": "find text", "replace": "replace text"},
        {"case_sens": false, "regex": true, "find": "some text any case (?P<capture>[^-])", "replace": "other text \\g<capture>"},
        {"case_sens": true, "regex": true, "find": "some text (?P<capture>[^-])", "replace": "other text  - \\g<capture>"},
        {"case_sens": false, "regex": true, "find": "(?P<id>\\d+)", "replace": "\\g<id>"},
        {"case_sens": false, "regex": true, "find": "^(?P<date>\\d{4}-\\d{2}-\\d{2}) (?P<time>\\d{2}-\\d{2}(-\\d{2})?) (?P<offset>[\\+]\\d{4})", "replace": "\\g<date>_\\g<time>\\g<offset>"},
        {"case_sens": true, "regex": true, "find": "^(?P<date>\\d{4}-\\d{2}-\\d{2})_", "replace": "\\g<date> "}
        {"python_re": "is non standard regex", "it_needs": "certain differences to work."}
        {"json": "is so fussy", "it_needs": "the last list item no comma else error"}
    ]
}

